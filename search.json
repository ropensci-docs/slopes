[{"path":[]},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://docs.ropensci.org/slopes/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://docs.ropensci.org/slopes/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to slopes","title":"Contributing to slopes","text":"outlines propose change slopes. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://docs.ropensci.org/slopes/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to slopes","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://docs.ropensci.org/slopes/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to slopes","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://docs.ropensci.org/slopes/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to slopes","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"ITSLeeds/slopes\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://docs.ropensci.org/slopes/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to slopes","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://docs.ropensci.org/slopes/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to slopes","text":"Please note slopes project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://docs.ropensci.org/slopes/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Robin Lovelace  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. slopes Copyright (C) 2020 Robin Lovelace This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://docs.ropensci.org/slopes/articles/benchmark.html","id":"performance","dir":"Articles","previous_headings":"","what":"Performance","title":"Benchmarking slopes calculation","text":"benchmark can reveal many route gradients can calculated per second: approximately routes per second using raster terra (default installed, using RasterLayer native SpatRaster objects) packages extract elevation estimates raster datasets, respectively. message: use terra package read-DEM data slope extraction speed important. go faster, can chose simple method gain speed expense accuracy:","code":"e = dem_lisbon_raster r = lisbon_road_network et = terra::rast(e) res = bench::mark(check = FALSE,   slope_raster = slope_raster(r, e),   slope_terra = slope_raster(r, et) ) res #> # A tibble: 2 × 6 #>   expression        min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr>   <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 slope_raster   42.8ms     43ms      23.0   19.39MB     9.21 #> 2 slope_terra    40.5ms     41ms      24.3    1.97MB     9.13 round(res$`itr/sec` * nrow(r)) #> [1] 6241 6596 e = dem_lisbon_raster r = lisbon_road_network res = bench::mark(check = FALSE,   bilinear1 = slope_raster(r, e),   bilinear2 = slope_raster(r, et),   simple1 = slope_raster(r, e, method = \"simple\"),   simple2 = slope_raster(r, et, method = \"simple\") ) res #> # A tibble: 4 × 6 #>   expression      min   median `itr/sec` mem_alloc `gc/sec` #>   <bch:expr> <bch:tm> <bch:tm>     <dbl> <bch:byt>    <dbl> #> 1 bilinear1    42.9ms   43.4ms      23.0    5.35MB    13.1  #> 2 bilinear2    41.6ms   42.6ms      23.5     1.9MB     7.83 #> 3 simple1      35.5ms   36.7ms      26.7    2.01MB    11.9  #> 4 simple2      36.2ms   36.5ms      27.2    2.02MB     8.17 round(res$`itr/sec` * nrow(r)) #> [1] 6233 6365 7244 7380"},{"path":"https://docs.ropensci.org/slopes/articles/intro-to-slopes.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"An introduction to slopes","text":"Although several ways name “slope”, “steepness”, “hilliness”, “inclination”, “aspect”, “gradient”, “declivity”, referred slopes package can defined “longitudinal gradient” linear geographic entities, defined context rivers (Cohen et al. 2018). package initially developed research road slopes support evidence-based sustainable transport policies. Accounting gradient planning new cycling infrastructure road space reallocation walking cycling can improve outcomes, example helping identify routes avoid steep hills. package can used calculate visualise slopes rivers trajectories representing movement roads type published open data Ariza-López et al. (2019). Data slopes useful many fields research, including hydrology, natural hazards (including flooding landslide risk management), recreational competitive sports cycling, hiking, skiing. Slopes also also important branches transport emissions modelling ecology. growing number people working geospatial data require accurate estimates gradient, including: Transport planning practitioners require accurate estimates roadway gradient estimating energy consumption, safety mode shift potential hilly cities (Lisbon, case study city used examples documentation). Vehicle routing software developers, need build systems sensitive going steep hills (e.g. bicycles, trains, large trucks), active travel planning, logistics, emergency services. Natural hazard researchers risk assessors require estimates linear gradient inform safety mitigation plans associated project hilly terrain. Aquatic ecologists, flooding researchers others, benefit estimates river gradient support modelling storm hydrographs likely domains slopes useful, agriculture, geology, civil engineering. example demand data provided package map showing gradients across Sao Paulo (Brazil, see image ) received 300 ‘likes’ Twitter generated conversations: https://twitter.com/DanielGuth/status/1347270685161304069","code":""},{"path":"https://docs.ropensci.org/slopes/articles/intro-to-slopes.html","id":"calculating-slopes","dir":"Articles","previous_headings":"","what":"Calculating slopes","title":"An introduction to slopes","text":"common slope calculation method defined vertical difference final start point line height (z1 z0) divided horizontal length separates . \\[ s = \\Delta z/l \\] Depending purpose application, might relevant understand hilliness estimated. Traffic sign","code":""},{"path":"https://docs.ropensci.org/slopes/articles/intro-to-slopes.html","id":"measures-of-route-hilliness","dir":"Articles","previous_headings":"Calculating slopes","what":"Measures of route hilliness","title":"An introduction to slopes","text":"many ways measure hilliness, mean distance weighted hilliness perhaps common. measures, implementation (current lack thereof) package summarised . Mean distance weighted gradient. Perhaps simplest widely applicable measure mean gradient route. weighted distance segment. Implemented default slope_raster() function. Max gradient. activities like cycling, steep hills disproportionate impact, may useful consider maximum gradient. yet implemented. Xth percentile gradient. Since maximum gradient gives information rest route segments, measures 75th percentile gradient informative. yet implemented. Inverted harmonic mean. use following formula get index (like arithmetic mean) makes use full dataset, weighted towards higher gradient segments. Whether index, formula shown , helpful, remains tested. yet implemented. \\[ H(x) = 1 - distance.weighted.harmonic.mean(1-x) \\]","code":""},{"path":"https://docs.ropensci.org/slopes/articles/intro-to-slopes.html","id":"segments-in-a-route-cumulative-slope","dir":"Articles","previous_headings":"Calculating slopes","what":"Segments in a route: Cumulative slope","title":"An introduction to slopes","text":"length segment route also relevant factor consideration. ok bike segment 8% xx length, ok bike four segments row like one (8% 4xx length), illustrated bellow. Illustration importance slope length. 4 segments 8% gradient single segment gradient 8%. accounted slope calculation methods take distance-weighted mean slopes. slope estimate results distance-weighted mean lower simple mean. common: steep slopes tend short! graphical representation scenario demonstrated shown Figure @ref(fig:weighted), shows relatively long flat final segment reduces slope half. Illustration example data demonstrates distance-weighted mean gradient, used default slopes package.","code":"x = c(0, 2, 3, 4, 5, 9) y = c(0, 0, 0, 0, 0, 9) z = c(1, 2, 2, 4, 3, 1) / 10 m = cbind(x, y, z) d = sequential_dist(m = m, lonlat = FALSE)  slopes::slope_distance_weighted(d = d, elevations = z) #> [1] 0.04040715 slopes::slope_distance_mean(d = d, elevations = z) #> [1] 0.07406138 plot(x, z, ylim = c(-0.5, 0.5), type = \"l\") (gxy = slope_matrix(m, lonlat = FALSE)) #> [1]  0.05000000  0.00000000  0.20000000 -0.10000000 -0.02030692 abline(h = 0, lty = 2) points(x[-length(x)], gxy, col = \"blue\") title(\"Distance elevation profile\",   sub = \"Points show calculated gradients of subsequent lines\")"},{"path":[]},{"path":"https://docs.ropensci.org/slopes/articles/roadnetworkcycling.html","id":"extract-the-osm-network-from-geofabrik","dir":"Articles","previous_headings":"","what":"Extract the OSM network from geofabrik","title":"Example: gradients of a road network for a given city","text":"step may use osmextract package downloads recent information available OSM (https://download.geofabrik.de/index.html) converts GeoPackage (.gpkg), equivalent shapefile.","code":"library(dplyr) library(sf) # remotes::install_github(\"ITSLeeds/osmextract\") library(osmextract) # get the network iow_osm = oe_get(\"Isle of Wight\", provider = \"geofabrik\", stringsAsFactors = FALSE,                   quiet = FALSE, force_download = TRUE, force_vectortranslate = TRUE) # 7 MB  # filter the major roads iow_network = iow_osm %>%    dplyr::filter(highway %in% c('primary', \"primary_link\", 'secondary',\"secondary_link\",                                 'tertiary', \"tertiary_link\", \"trunk\", \"trunk_link\",                                 \"residential\", \"cycleway\", \"living_street\", \"unclassified\",                                 \"motorway\", \"motorway_link\", \"pedestrian\", \"steps\", \"track\")) #remove: \"service\""},{"path":"https://docs.ropensci.org/slopes/articles/roadnetworkcycling.html","id":"clean-the-road-network","dir":"Articles","previous_headings":"","what":"Clean the road network","title":"Example: gradients of a road network for a given city","text":"optional steps give better results, although may slow process since increase number segments present network.","code":""},{"path":"https://docs.ropensci.org/slopes/articles/roadnetworkcycling.html","id":"filter-the-unconnected-segments","dir":"Articles","previous_headings":"Clean the road network","what":"Filter the unconnected segments","title":"Example: gradients of a road network for a given city","text":"rnet_group() function stplanar package assesses connectivity segment assigns group number (similar clustering process). may filter main group, one connected segments.","code":"# remotes::install_github(\"ropensci/stplanr\") library(stplanr) # filter unconnected roads iow_network$group = rnet_group(iow_network) iow_network_clean = iow_network %>% filter(group == 1) # the network with more connected segments"},{"path":"https://docs.ropensci.org/slopes/articles/roadnetworkcycling.html","id":"break-the-segments-on-vertices","dir":"Articles","previous_headings":"Clean the road network","what":"Break the segments on vertices","title":"Example: gradients of a road network for a given city","text":"long segment assigned average slope, long segment can broken nodes slope part segment. one hand, want segments break nodes. hand, don’t want artificial nodes created two lines cross, particular different z levels (eg. brunels: bridges tunnels). rnet_breakup_vertices stplanr breaks segments inner vertices, preserving brunels. case, around 1.6 x number segments original network.","code":"iow_network_segments = rnet_breakup_vertices(iow_network_clean)"},{"path":"https://docs.ropensci.org/slopes/articles/roadnetworkcycling.html","id":"get-slope-values-for-each-segment","dir":"Articles","previous_headings":"","what":"Get slope values for each segment","title":"Example: gradients of a road network for a given city","text":"case use slope_raster() function, retrieve z values digital elevation model. raster obtained STRM NASA mission. SRTM (Shuttle Radar Topography Mission) NASA’s mission provides freely available worldwide DEM, resolution 25 30m vertical accuracy 16m - . resolution USA might better. Alternatively, COPERNICUS ESA’s mission also provides freely available DEM Europe, 25m resolution vertical accuracy 7m - . Depending large road network, can use elevation_add() function - require valid Mapbox api key. required data prepared estimate road segments’ gradient. Half road segments Isle Wight gradient 3.1%. adopt simplistic qualitative classification cycling effort uphill, compare number segments class. means 49% roads flat almost flat (0-3%) 75% roads easily cyclable (0-5%). Now let us put information map (see interactive version).","code":"# Import and plot DEM u = \"https://github.com/U-Shift/Declives-RedeViaria/releases/download/0.2/IsleOfWightNASA_clip.tif\" f = basename(u) download.file(url = u, destfile = f, mode = \"wb\") dem = raster::raster(f) # res(dem) #27m of resolution network = iow_network_segments  library(raster) plot(dem) plot(sf::st_geometry(network), add = TRUE) #check if they overlay # Get the slope value for each segment (abs), using slopes package library(slopes) library(geodist) network$slope = slope_raster(network, dem) network$slope = network$slope*100 #percentage summary(network$slope) #check the values # Classify slopes network$slope_class = network$slope %>%   cut(     breaks = c(0, 3, 5, 8, 10, 20, Inf),     labels = c(\"0-3: flat\", \"3-5: mild\", \"5-8: medium\", \"8-10: hard\",                 \"10-20: extreme\", \">20: impossible\"),     right = F   ) round(prop.table(table(network$slope_class))*100,1) # more useful information network$length = st_length(network)  # make an interactive map library(tmap) palredgreen = c(\"#267300\", \"#70A800\", \"#FFAA00\", \"#E60000\", \"#A80000\", \"#730000\") #color palette # tmap_mode(\"view\") tmap_options(basemaps = leaflet::providers$CartoDB.Positron) #basemap  slopemap =   tm_shape(network) +   tm_lines(     col = \"slope_class\",     palette = palredgreen,     lwd = 2, #line width     title.col = \"Slope [%]\",     popup.vars = c(\"Highway\" = \"highway\",                    \"Length\" = \"length\",                   \"Slope: \" = \"slope\",                   \"Class: \" = \"slope_class\"),     popup.format = list(digits = 1),     # id = \"slope\"     id = \"name\" #if it gets too memory consuming, delete this line   )  slopemap #export to html tmap_save(slopemap, \"html/SlopesIoW.html\")   # export information as geopackage st_write(network, \"shapefiles/SlopesIoW.gpkg\", append=F)"},{"path":"https://docs.ropensci.org/slopes/articles/roadnetworkcycling.html","id":"result","dir":"Articles","previous_headings":"Get slope values for each segment","what":"Result:","title":"Example: gradients of a road network for a given city","text":"Isle Wight (UK)","code":""},{"path":"https://docs.ropensci.org/slopes/articles/roadnetworkcycling.html","id":"other-examples","dir":"Articles","previous_headings":"","what":"Other examples","title":"Example: gradients of a road network for a given city","text":"São Paulo (Brazil) Lisbon (Portugal) Oporto (Portugal) Leeds (UK) Zurich (CH)","code":""},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Get started","text":"can install released version slopes CRAN : Install development version GitHub :","code":"install.packages(\"slopes\") # install.packages(\"remotes\") remotes::install_github(\"ropensci/slopes\")"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"installation-for-dem-downloads","dir":"Articles","previous_headings":"Installation","what":"Installation for DEM downloads","title":"Get started","text":"already DEM data want make use package’s ability download using ceramic package, install package suggested dependencies, follows: Furthermore, need add MapBox API key able get DEM datasets, signing registering key https://account.mapbox.com/access-tokens/ following steps:","code":"# install.packages(\"remotes\") remotes::install_github(\"ropensci/slopes\", dependencies = \"Suggests\") usethis::edit_r_environ() MAPBOX_API_KEY=xxxxx # replace XXX with your api key"},{"path":[]},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"elevation","dir":"Articles","previous_headings":"Functions","what":"Elevation","title":"Get started","text":"elevation_add() Take linestring add third dimension (z) coordinates elevation_get() Get elevation data hosted maptile services (returns raster) elevation_extract() Extract elevations coordinates z_value() retrieves elevation values z (vector sequential vertices) z_start() retrieves elevation value first linestring vertice z_end() retrieves elevation value last linestring vertice z_mean() retrieves elevation mean value z_max() retrieves elevation max value z_min() retrieves elevation min value","code":""},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"distance","dir":"Articles","previous_headings":"Functions","what":"Distance","title":"Get started","text":"sequential_dist() Calculate sequential distances sequential coordinate pairs","code":""},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"slope","dir":"Articles","previous_headings":"Functions","what":"Slope","title":"Get started","text":"slope_vector() calculates slopes associated consecutive elements one dimensional distance associated elevations. slope_distance() calculates slopes associated consecutive distances elevations. slope_distance_mean() calculates mean average slopes associated consecutive distances elevations. slope_distance_weighted() calculates slopes associated consecutive distances elevations, mean value associated set distance/elevation vectors weighted proportion distance elevation measurement, longer sections proportionally influence resulting gradient estimate. slope_raster() Calculate slopes linestrings based local raster map slope_matrix() Calculate gradient line segments 3D matrix coordinates slope_matrix_weighted() Calculate weighted gradient line segments 3D matrix coordinates slope_xyz() Calculates slope associated linestrings xyz coordinates","code":""},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"plot","dir":"Articles","previous_headings":"Functions","what":"Plot","title":"Get started","text":"plot_dz() Plot digital elevation profile based xyz data plot_slope() Plots slope profile associated linestring base R graphics","code":""},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"package-datasets","dir":"Articles","previous_headings":"","what":"Package datasets","title":"Get started","text":"slopes package comes datasets play : Linestrings: lisbon_road_segment: single road segment Lisbon (XY) lisbon_route: route variation elevation Lisbon (XY) cyclestreets_route: bike route Leeds (XY) Road network: lisbon_road_network: sample road segments downtown Lisbon magnolia_xy: sample road segments center Seattle, Magnolia neighborhood Digital elevation model (DEM): dem_lisbon_raster DEM downtown Lisbon (EPSG:3763)","code":""},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Get started","text":"Load package usual way. also load sf library: minimum input data requirement using package sf object containing LINESTRING geometries. can also create sf objects matrix coordinates, illustrated (don’t worry details now, can read works sf package documentation): maybe remove ? add step 1 step 2 .","code":"library(slopes) library(sf) m = cbind(   c(-9.1333, -9.134, -9.13),   c(38.714, 38.712, 38.710) ) sf_linestring = sf::st_sf(   data.frame(id = 1),   geometry = st_sfc(st_linestring(m)),   crs = 4326 ) class(sf_linestring) #> [1] \"sf\"         \"data.frame\" st_geometry_type(sf_linestring) #> [1] LINESTRING #> 18 Levels: GEOMETRY POINT LINESTRING POLYGON MULTIPOINT ... TRIANGLE"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"single-road-segment-no-dem","dir":"Articles","previous_headings":"Examples","what":"Single road segment + no DEM","title":"Get started","text":"can check input dataset suitable functions class() base R st_geometry_type() sf package, demonstrated example object lisbon_road_segment contained within package: quick way testing object can slopes calculated plot interactive map check underneath object indeed terrain give linestrings gradient: Imagine want calculate gradient route shown . can two step process follows. Step 1: add elevations coordinate linestring (requires MapBox API key): argument dem = NULL, function downloads necessary elevation information Mapbox. can use argument local digital elevation model (dem = ...). can check elevations added new sf_linestring_xyz object printing coordinates, follows (note new Z column goes 87 m sea level 79 m short distance). can use z_ functions extract values: Step 2: calculate average slope linestring result, just 0.2, tells us ’s quite steep slope: 21% gradient average.","code":"sf_linestring = lisbon_road_segment class(sf_linestring) #> [1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\" st_geometry_type(sf_linestring) #> [1] LINESTRING #> 18 Levels: GEOMETRY POINT LINESTRING POLYGON MULTIPOINT ... TRIANGLE library(tmap) tmap_mode(\"view\") tm_shape(sf_linestring) +   tm_lines(lwd = 5) +   tm_basemap(leaflet::providers$Esri.WorldTopoMap) sf_linestring_xyz = elevation_add(sf_linestring) # dem = NULL #> Loading required namespace: ceramic #> Preparing to download: 9 tiles at zoom = 18 from  #> https://api.mapbox.com/v4/mapbox.terrain-rgb/ st_coordinates(sf_linestring_xyz) #>               X         Y    Z L1 #>  [1,] -87064.34 -105506.3 88.0  1 #>  [2,] -87065.47 -105514.3 87.7  1 #>  [3,] -87066.60 -105522.3 86.3  1 #>  [4,] -87067.73 -105530.3 86.3  1 #>  [5,] -87068.86 -105538.2 86.2  1 #>  [6,] -87069.99 -105546.2 84.4  1 #>  [7,] -87075.24 -105548.4 83.1  1 #>  [8,] -87080.48 -105550.5 81.5  1 #>  [9,] -87080.06 -105560.1 80.8  1 #> [10,] -87079.65 -105569.6 79.8  1 #> [11,] -87079.23 -105579.2 78.5  1 #> [12,] -87078.81 -105588.8 77.7  1 #> [13,] -87078.39 -105598.3 76.4  1 #> [14,] -87069.73 -105601.7 80.0  1 #> [15,] -87068.93 -105608.4 79.5  1 #> [16,] -87068.14 -105615.1 78.5  1 #> [17,] -87067.34 -105621.7 77.6  1 #> [18,] -87062.16 -105625.7 79.5  1 #> [19,] -87056.99 -105629.6 79.8  1 z_value(sf_linestring_xyz) # returns all the elevation values between xy coordinates #>  [1] 88.0 87.7 86.3 86.3 86.2 84.4 83.1 81.5 80.8 79.8 78.5 77.7 76.4 80.0 79.5 #> [16] 78.5 77.6 79.5 79.8  z_mean(sf_linestring_xyz) # elevation mean value #> [1] 81.66316 z_min(sf_linestring_xyz) # elevation min value  #> [1] 88 z_max(sf_linestring_xyz) # elevation max value  #> [1] 88 z_start(sf_linestring_xyz) # first z #> [1] 88 z_end(sf_linestring_xyz) # last z #> [1] 79.8 slope_xyz(sf_linestring_xyz) #>         1  #> 0.1394946"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"route-available-dem","dir":"Articles","previous_headings":"Examples","what":"Route + available DEM","title":"Get started","text":"Using slopes package can estimate gradient individual road segments. segments combined routes, need means assessing hilliness entire route. range indices can used represent route hilliness. choice index appropriate may context dependent (see introducion slopes vignette). , let us use function entire route, lisbon_route, also available package: Step 1: add elevations coordinate route: Step 2: calculate average slope route result shows 7.7% gradient average. Now, already DEM, can calculate slopes directly follows, slope_raster(): result shows 7.8% gradient average. can see, retrieved result elevation information available Mapbox Digital Elevation Model, quite similar. (See differences Verification slopes.)","code":"sf_route = lisbon_route class(sf_route) #> [1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\" st_geometry_type(sf_route) #> [1] LINESTRING #> 18 Levels: GEOMETRY POINT LINESTRING POLYGON MULTIPOINT ... TRIANGLE  tm_shape(sf_route) +   tm_lines(lwd = 3) +   tm_basemap(leaflet::providers$Esri.WorldTopoMap) sf_route_xyz = elevation_add(sf_route) #> Loading required namespace: ceramic #> Preparing to download: 12 tiles at zoom = 15 from  #> https://api.mapbox.com/v4/mapbox.terrain-rgb/ slope_xyz(sf_route_xyz) #>          1  #> 0.07681812 class(dem_lisbon_raster) #> [1] \"RasterLayer\" #> attr(,\"package\") #> [1] \"raster\" slope_raster(routes = sf_route,              dem = dem_lisbon_raster) #>          1  #> 0.07817098"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"route-with-xyz-coordinates","dir":"Articles","previous_headings":"Examples","what":"Route with xyz coordinates","title":"Get started","text":"linestring object already X, Y Z coordinates (e.g. GPS device), can use slope_ functions directly. case, use slopes package need elevation points, either vector, matrix digital elevation model (DEM) encoded raster dataset.","code":"# for a line xz x = c(0, 2, 3, 4, 5, 9) elevations = c(1, 2, 2, 4, 3, 1) / 10 slope_vector(x, elevations) #> [1]  0.05  0.00  0.20 -0.10 -0.05  # for a path xyz xy = st_coordinates(sf_linestring) dist = sequential_dist(xy, lonlat = FALSE) elevations = elevation_extract(xy, dem_lisbon_raster)  slope_distance(dist, elevations) #>  [1] -0.047226259 -0.040883072 -0.025032918 -0.061124557 -0.017447060 #>  [6] -0.062426272 -0.123580541  0.033705378  0.004292243 -0.040360003 #> [11] -0.151671893 -0.182367906  0.409246854 -0.034463974 -0.098406640 #> [16] -0.161798173  0.076261379  0.100654228 slope_distance_mean(dist, elevations) #> [1] 0.09283052 slope_distance_weighted(dist, elevations) #> [1] 0.09501323"},{"path":[]},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"road-network","dir":"Articles","previous_headings":"Calculating and plotting gradients","what":"Road network","title":"Get started","text":"Typical use cases package calculating slopes geographic objects representing roads linear features. two types input data represented code output plot .  Calculate average gradient road segment follows: created new column, slope represents average, distance weighted slope associated road segment. units represent percentage incline, change elevation divided distance. summary result tells us average gradient slopes example data just 5%. result equivalent returned ESRI’s Slope_3d() 3D Analyst extension, correlation ArcMap implementation implementation 0.95 test dataset (find higher correlations larger datasets - see verification slopes: can now visualise average slopes route calculated slopes package follows:","code":"# A raster dataset included in the package: class(dem_lisbon_raster) # digital elevation model #> [1] \"RasterLayer\" #> attr(,\"package\") #> [1] \"raster\" summary(raster::values(dem_lisbon_raster)) # heights range from 0 to ~100m #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>   0.000   8.598  30.233  33.733  55.691  97.906    4241 raster::plot(dem_lisbon_raster)  # A vector dataset included in the package: class(lisbon_road_network) #> [1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\" plot(sf::st_geometry(lisbon_road_network), add = TRUE) lisbon_road_network$slope = slope_raster(lisbon_road_network, dem = dem_lisbon_raster) summary(lisbon_road_network$slope) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #> 0.00000 0.01246 0.03534 0.05462 0.08251 0.27583 cor(   lisbon_road_network$slope,    # slopes calculates by the slopes package   lisbon_road_network$Avg_Slope # slopes calculated by ArcMap's 3D Analyst extension ) #> [1] 0.9770436 raster::plot(dem_lisbon_raster) plot(lisbon_road_network[\"slope\"], add = TRUE, lwd = 5)"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"elevation-profile","dir":"Articles","previous_headings":"Calculating and plotting gradients","what":"Elevation profile","title":"Get started","text":"Taking first route example, imagine want go Santa Catarina area East map Castelo de São Jorge West. route goes valley side: can convert lisbon_route object 3d linestring object X, Y Z coordinates, using elevation values stored DEM, follows: can now visualise elevation profile route follows:","code":"# library(tmap) # tmap_mode(\"view\") qtm(lisbon_route) lisbon_route_xyz = elevation_add(lisbon_route, dem_lisbon_raster) plot_slope(lisbon_route_xyz)"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"splitting-the-network","dir":"Articles","previous_headings":"Calculating and plotting gradients","what":"Splitting the network","title":"Get started","text":"lisbon_route_xyz example useful often want calculate slopes entire route (case one 2.5 km long) segments. various ways split segements, including using algorithms packages GIS programs, ’ll use stplanr function rnet_breakup_vertices() (see vignette(\"roadnetworkcycling\") example function working large road network): can now calculate slope segments.","code":"sf::st_length(lisbon_route_xyz) # check route length: 2.5 km #> 2518.951 [m] lisbon_route_segments = stplanr::rnet_breakup_vertices(lisbon_route_xyz) summary(sf::st_length(lisbon_route_segments)) # mean of 50 m #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   0.000   0.000   7.631  46.647  65.887 409.479 lisbon_route_segments$slope = slope_xyz(lisbon_route_segments) summary(lisbon_route_segments$slope) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #> 0.01325 0.04628 0.08120 0.09273 0.12339 0.22033      24"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"directed-slopes","dir":"Articles","previous_headings":"Calculating and plotting gradients","what":"Directed slopes","title":"Get started","text":"route direction implicit order vertices segments. perspective someone travelling along route, slopes direction important: ’s easier go uphill downhill. calculate slopes direction, add directed argument follows. Plotting directed undirected slopes side--side shows importance considering slope direction route planning, may want avoid steep hills going uphill downhill certain types travel, example.","code":"lisbon_route_segments$slope_directed = slope_xyz(lisbon_route_segments, directed = TRUE) summary(lisbon_route_segments$slope_directed) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.      NA's  #> -0.202564 -0.062971  0.009981  0.005019  0.085559  0.202564        24 breaks = c(0, 3, 5, 8, 10, 20, 50) breaks_proportion = breaks / 100 breaks_directed = c(-rev(breaks_proportion), (breaks_proportion[-1])) plot(lisbon_route_segments[\"slope\"], breaks = breaks_proportion) plot(lisbon_route_segments[\"slope_directed\"], breaks = breaks_directed)"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"using-elevation_add-with-and-without-a-dem-argument","dir":"Articles","previous_headings":"Calculating and plotting gradients","what":"Using elevation_add() with and without a dem = argument","title":"Get started","text":"raster dataset representing elevations, can automatically download omitting argument dem = NULL (step automatically done function elevation_add() shown basic example , results subsequent code chunk shown): outlined basic example can done concisely, :  Note elevations shown plots differ, since first based DEM elevation available, second based Mapbox elevation.","code":"dem_mapbox = elevation_get(lisbon_route) lisbon_road_proj = st_transform(lisbon_route, raster::crs(dem_mapbox)) lisbon_route_xyz_mapbox = elevation_add(lisbon_road_proj, dem = dem_mapbox) plot_slope(lisbon_route_xyz_mapbox) lisbon_route_xyz_auto = elevation_add(lisbon_route) #dem = NULL plot_slope(lisbon_route_xyz_auto)"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"commulative-elevation-change","dir":"Articles","previous_headings":"","what":"Commulative elevation change","title":"Get started","text":"following example calculate elevations route Leeds, plots commutative sum along route (evaluated).","code":"cyclestreets_xyz = elevation_add(cyclestreets_route)  plot_slope(cyclestreets_xyz) plot(cumsum(cyclestreets_xyz$distances), cumsum(cyclestreets_xyz$elevation_change))"},{"path":"https://docs.ropensci.org/slopes/articles/slopes.html","id":"see-more-in-vignettes","dir":"Articles","previous_headings":"","what":"See more in vignettes","title":"Get started","text":"slopes package introduction slopes Reproducible example: gradients road network given city Verification slopes Benchmarking slopes calculation","code":""},{"path":"https://docs.ropensci.org/slopes/articles/verification.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Verification of slopes","text":"article aims provide external verification results provided package. far one verification dataset used, hope find others. know verification datasets, please let us know — initially planned use dataset paper river slopes (Cohen et al. 2018), find way extracting underlying data calculation. article primarily used following packages, although others loaded subsequent code chunks. results reproducible (requires downloading input data manually installing additional packages). keep package build times low, results presented .","code":"library(slopes) library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE"},{"path":[]},{"path":"https://docs.ropensci.org/slopes/articles/verification.html","id":"three-dimensional-traces-of-roads-dataset","dir":"Articles","previous_headings":"","what":"Three-dimensional traces of roads dataset","title":"Verification of slopes","text":"input dataset, comprising 3D linestring recorded using dual frequency GNSS receiver (Leica 1200) vertical accuracy 20 mm  (Ariza-López et al. 2019) downloaded  figshare website .zip file unzipped inflated working directory follows (evaluated reduce package build times): verify estimates hilliness, generated slope estimates segment compared Table 7 Ariza-López et al. (2019). absolute gradient measure published paper :  slopes estimated follows: Combined previous table Ariza-López et al. (2019), results can compared obtained mainstream GPS, accurate GNSS receiver: notable package substantially overestimates gradient, perhaps due low resolution underlying elevation raster. However, slopes package seems provide less noisy slope estimates GPS approach, lower maximum values low standard deviation.","code":"download.file(\"https://ndownloader.figshare.com/files/14331185\", \"3DGRT_AXIS_EPSG25830_v2.zip\") unzip(\"3DGRT_AXIS_EPSG25830_v2.zip\") trace = sf::read_sf(\"3DGRT_AXIS_EPSG25830_v2.shp\") plot(trace) nrow(trace) #> 11304 summary(trace$X3DGRT_h) #>  Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   642.9   690.3   751.4   759.9   834.3   884.9 res_gps = c(0.00, 4.58, 1136.36, 6.97) res_final = c(0.00, 4.96, 40.70, 3.41) res = data.frame(cbind(   c(\"GPS\", \"Dual frequency GNSS receiver\"),   rbind(res_gps, res_final) )) names(res) = c(\"Source\", \"min\", \" mean\", \" max\", \" stdev\") knitr::kable(res, row.names = FALSE) # mapview::mapview(trace) # check extent: it's above 6km in height # remotes::install_github(\"hypertidy/ceramic\") loc = colMeans(sf::st_coordinates(sf::st_transform(trace, 4326))) e = ceramic::cc_elevation(loc = loc[1:2], buffer = 3000) trace_projected = sf::st_transform(trace, 3857) plot(e) plot(trace_projected$geometry, add = TRUE) # source: https://www.robinlovelace.net/presentations/munster.html#31 points2line_trajectory = function(p) {   c = st_coordinates(p)   i = seq(nrow(p) - 2)   l = purrr::map(i, ~ sf::st_linestring(c[.x:(.x + 1), ]))   lfc = sf::st_sfc(l)   a = seq(length(lfc)) + 1 # sequence to subset   p_data = cbind(sf::st_set_geometry(p[a, ], NULL))   sf::st_sf(p_data, geometry = lfc) } r = points2line_trajectory(trace_projected) # summary(st_length(r)) # mean distance is 1m! Doesn't make sense, need to create segments s = slope_raster(r, e = e) slope_summary = data.frame(min = min(s), mean = mean(s), max = max(s), stdev = sd(s)) slope_summary = slope_summary * 100 knitr::kable(slope_summary, digits = 1)"},{"path":[]},{"path":"https://docs.ropensci.org/slopes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robin Lovelace. Author, maintainer. Rosa Félix. Author. Joey Talbot. Author. Dan Olner. Reviewer.            Dan reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/420#issuecomment-857662657 Andy Teucher. Reviewer.            Andy reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/420#issuecomment-858231647","code":""},{"path":"https://docs.ropensci.org/slopes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lovelace R, Félix R, Talbot J (2024). slopes: Calculate Slopes Roads, Rivers Trajectories. R package version 1.0.1, https://docs.ropensci.org/slopes/, https://github.com/ropensci/slopes/.","code":"@Manual{,   title = {slopes: Calculate Slopes of Roads, Rivers and Trajectories},   author = {Robin Lovelace and Rosa Félix and Joey Talbot},   year = {2024},   note = {R package version 1.0.1, https://docs.ropensci.org/slopes/},   url = {https://github.com/ropensci/slopes/}, }"},{"path":"https://docs.ropensci.org/slopes/index.html","id":"slopes-package","dir":"","previous_headings":"","what":"Calculate Slopes of Roads, Rivers and Trajectories","title":"Calculate Slopes of Roads, Rivers and Trajectories","text":"slopes R package calculates slope (longitudinal steepness, also known gradient) roads, rivers linear (simple) features, based two main inputs: vector linestring geometries defined classes sf package raster objects pixel values reporting average height, commonly known digital elevation model (DEM) datasets, defined classes raster recent terra packages Data slopes useful many fields research, including hydrology, natural hazards (including flooding landslide risk management), recreational competitive sports cycling, hiking, skiing. Slopes also also important branches transport emissions modelling ecology. See intro--slopes vignette details fields using slope data need package. README covers installation basic usage. information slopes use package calculate , see get started introducion slopes vignette.","code":""},{"path":"https://docs.ropensci.org/slopes/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How it works","title":"Calculate Slopes of Roads, Rivers and Trajectories","text":"package takes two main types input data slope calculation: - vector geographic objects representing linear features, - elevation values digital elevation model representing continuous terrain surface can downloaded using functionality package package can used two sources elevation data: - openly available elevation data via interface ceramic package, enabling estimation hilliness routes anywhere worldwide even local elevation data lacking. package takes geographic lines objects returns elevation data per vertex (providing output 3D point geometry sf package default) per line feature (providing average gradient default). - elevation model, available machine.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/slopes/index.html","id":"installation","dir":"","previous_headings":"Getting started","what":"Installation","title":"Calculate Slopes of Roads, Rivers and Trajectories","text":"Install development version GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"ropensci/slopes\")"},{"path":"https://docs.ropensci.org/slopes/index.html","id":"installation-for-dem-downloads","dir":"","previous_headings":"Getting started > Installation","what":"Installation for DEM downloads","title":"Calculate Slopes of Roads, Rivers and Trajectories","text":"already DEM data want make use package’s ability download using ceramic package, install package suggested dependencies, follows: Furthermore, need add MapBox API key able get DEM datasets, signing registering key https://account.mapbox.com/access-tokens/ following steps:","code":"# install.packages(\"remotes\") remotes::install_github(\"ropensci/slopes\", dependencies = \"Suggests\") usethis::edit_r_environ() MAPBOX_API_KEY=xxxxx # replace XXX with your api key"},{"path":"https://docs.ropensci.org/slopes/index.html","id":"basic-examples","dir":"","previous_headings":"","what":"Basic examples","title":"Calculate Slopes of Roads, Rivers and Trajectories","text":"Load package usual way. also load sf library: minimum input data requirement using package sf object containing LINESTRING geometries, illustrated (requires MapBox API key): default argument dem = NULL, function downloads necessary elevation information Mapbox. can also use local digital elevation model (dem = ...), shown example : cases can obtain average gradient linestring slope_xyz() plot elevation profile plot_slope() follows:  See functions Get started vignette.","code":"library(slopes) library(sf) sf_linestring = lisbon_route # import or load a linestring object sf_linestring_xyz = elevation_add(sf_linestring)  # dem = NULL #> Loading required namespace: ceramic #> Preparing to download: 12 tiles at zoom = 12 from  #> https://api.mapbox.com/v4/mapbox.terrain-rgb/ sf_linestring_xyz_local = elevation_add(sf_linestring, dem = dem_lisbon_raster) slope_xyz(sf_linestring_xyz_local) #>          1  #> 0.07817098 plot_slope(sf_linestring_xyz_local)"},{"path":"https://docs.ropensci.org/slopes/index.html","id":"see-more-in-vignettes","dir":"","previous_headings":"","what":"See more in vignettes","title":"Calculate Slopes of Roads, Rivers and Trajectories","text":"Get started introduction slopes Reproducible example: gradients road network given city Verification slopes Benchmarking slopes calculation","code":""},{"path":"https://docs.ropensci.org/slopes/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Calculate Slopes of Roads, Rivers and Trajectories","text":"Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/slopes/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"package provides functions example data support research slope (also known longitudinal gradient steepness) linear geographic entities roads (Ariza-López et al. 2019) rivers (Cohen et al. 2018). package initially developed calculate steepness street segments can used calculate steepness linear feature can represented LINESTRING geometries ‘sf’ class system (Pebesma 2018). package takes two main types input data slope calculation: vector geographic objects representing linear features, raster geographic objects elevation values (can downloaded using functionality package) representing continuous terrain surface. raster object provided package attempts download elevation data using ‘ceramic’ package.","code":""},{"path":"https://docs.ropensci.org/slopes/paper.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of need","title":"Summary","text":"Although several ways name “slope,” “steepness,” “hilliness,” “inclination,” “aspect,” “gradient,” “declivity,” referred slopes package can defined “longitudinal gradient” linear geographic entities, defined context rivers (Cohen et al. 2018). package initially developed research road slopes support evidence-based sustainable transport policies. Accounting gradient planning new cycling infrastructure road space reallocation walking cycling can improve outcomes, example helping identify routes avoid steep hills. package can used calculate visualise slopes rivers trajectories representing movement roads type published open data Ariza-López et al. (2019). Data slopes useful many fields research, including hydrology, natural hazards (including flooding landslide risk management), recreational competitive sports cycling, hiking, skiing. Slopes also also important branches transport emissions modelling ecology. growing number people working geospatial data require accurate estimates gradient, including: Transport planning practitioners require accurate estimates roadway gradient estimating energy consumption, safety mode shift potential hilly cities (Lisbon, case study city used examples documentation). Vehicle routing software developers, need build systems sensitive going steep hills (e.g. bicycles, trains, large trucks), active travel planning, logistics, emergency services. Natural hazard researchers risk assessors require estimates linear gradient inform safety mitigation plans associated project hilly terrain. Aquatic ecologists, flooding researchers others, benefit estimates river gradient support modelling storm hydrographs likely domains slopes useful, agriculture, geology, civil engineering. example demand data provided package map showing gradients across Sao Paulo (Brazil, see image ) received 300 ‘likes’ Twitter generated conversations: https://twitter.com/DanielGuth/status/1347270685161304069","code":""},{"path":"https://docs.ropensci.org/slopes/paper.html","id":"usage-and-key-functions","dir":"","previous_headings":"","what":"Usage and Key functions","title":"Summary","text":"Install development version GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"ropensci/slopes\")"},{"path":"https://docs.ropensci.org/slopes/paper.html","id":"installation-for-dem-downloads","dir":"","previous_headings":"","what":"Installation for DEM downloads","title":"Summary","text":"already DEM data want make use package’s ability download using ceramic package, install package suggested dependencies, follows: Furthermore, need add MapBox API key able get DEM datasets, signing registering key https://account.mapbox.com/access-tokens/ following steps: key functions package elevation_add(), adds third ‘Z’ coordinate value vertex defining LINESTRING objects, slope_xyz() calculates slopes linear feature simple features object. default, elevation vertex estimated using bilinear interpolation (method = \"bilinear\") calculates point height based proximity centroids surrounding cells. value method argument passed method argument raster::extract() terra::extract() depending class input raster dataset. See Kidner, Dorey, Smith (1999) descriptions alternative elevation interpolation extrapolation algorithms.","code":"# install.packages(\"remotes\") remotes::install_github(\"ropensci/slopes\", dependencies = \"Suggests\") usethis::edit_r_environ() MAPBOX_API_KEY=xxxxx # replace XXX with your api key"},{"path":[]},{"path":"https://docs.ropensci.org/slopes/reference/cyclestreets_route.html","id":null,"dir":"Reference","previous_headings":"","what":"A journey from CycleStreets.net — cyclestreets_route","title":"A journey from CycleStreets.net — cyclestreets_route","text":"Road segments representing suggested route cycle Leeds, UK.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/cyclestreets_route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A journey from CycleStreets.net — cyclestreets_route","text":"","code":"cyclestreets_route"},{"path":"https://docs.ropensci.org/slopes/reference/cyclestreets_route.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A journey from CycleStreets.net — cyclestreets_route","text":"object class sf 18 rows 14 columns route characteristics. See https://rpackage.cyclestreets.net/reference/journey.html details.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/cyclestreets_route.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A journey from CycleStreets.net — cyclestreets_route","text":"CycleStreets.net","code":""},{"path":"https://docs.ropensci.org/slopes/reference/cyclestreets_route.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A journey from CycleStreets.net — cyclestreets_route","text":"Simple feature collection 30 features 32 fields See data-raw/cyclestreets_route.R package's github repo details.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/cyclestreets_route.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A journey from CycleStreets.net — cyclestreets_route","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE class(cyclestreets_route) #> [1] \"sf\"         \"data.frame\" plot(cyclestreets_route$geometry)  cyclestreets_route #> Simple feature collection with 18 features and 14 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -1.55598 ymin: 53.80275 xmax: -1.52271 ymax: 53.81893 #> Geodetic CRS:  WGS 84 #> First 10 features: #>                      name distances time busynance elevations start_longitude #> 1             Avenue Hill       156   22       226         NA        -1.52271 #> 2           Spencer Place       771  165      1768         NA        -1.52271 #> 3      Roundhay Road, A58       195   49      4256         NA        -1.52271 #> 4           Roundhay Road       513  129      1761         NA        -1.52271 #> 5            North Street       143   57       469         NA        -1.52271 #> 6  Sheepscar Street South       105   82      5298         NA        -1.52271 #> 7      Clay Pit Lane, A58       744  300     25635         NA        -1.52271 #> 8    Woodhouse Lane, A660         9    5       358         NA        -1.52271 #> 9    Woodhouse Lane, A660       160   68      4791         NA        -1.52271 #> 10   Woodhouse Lane, A660        65   32      2366         NA        -1.52271 #>    start_latitude finish_longitude finish_latitude gradient_segment #> 1        53.81893         -1.55598        53.80692      0.051282051 #> 2        53.81893         -1.55598        53.80692      0.015564202 #> 3        53.81893         -1.55598        53.80692      0.005128205 #> 4        53.81893         -1.55598        53.80692      0.007797271 #> 5        53.81893         -1.55598        53.80692      0.006993007 #> 6        53.81893         -1.55598        53.80692      0.057142857 #> 7        53.81893         -1.55598        53.80692      0.029569892 #> 8        53.81893         -1.55598        53.80692      0.111111111 #> 9        53.81893         -1.55598        53.80692      0.031250000 #> 10       53.81893         -1.55598        53.80692      0.030769231 #>    elevation_change      provisionName quietness quietness_segment #> 1                 8 Residential street         7        0.69026549 #> 2                12 Residential street         7        0.43608597 #> 3                 1         Trunk road         7        0.04581767 #> 4                 4         Minor road         7        0.29131175 #> 5                 1  Unclassified road         7        0.30490405 #> 6                 6  Trunk road access         7        0.01981880 #> 7                22         Trunk road         7        0.02902282 #> 8                 1         Trunk road         7        0.02513966 #> 9                 5         Trunk road         7        0.03339595 #> 10                2  Trunk road access         7        0.02747253 #>                          geometry #> 1  LINESTRING (-1.52271 53.818... #> 2  LINESTRING (-1.52375 53.817... #> 3  LINESTRING (-1.52539 53.810... #> 4  LINESTRING (-1.52807 53.810... #> 5  LINESTRING (-1.53467 53.807... #> 6  LINESTRING (-1.53531 53.806... #> 7  LINESTRING (-1.53684 53.806... #> 8  LINESTRING (-1.54594 53.802... #> 9  LINESTRING (-1.546 53.80282... #> 10 LINESTRING (-1.54752 53.803..."},{"path":"https://docs.ropensci.org/slopes/reference/dem_lisbon_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Elevation in central Lisbon, Portugal — dem_lisbon_raster","title":"Elevation in central Lisbon, Portugal — dem_lisbon_raster","text":"dataset containing elevation around Lisbon geographic resolution 10m. dataset 200 pixels wide 133 pixels high, covering 2.7 square kilometres central Lisbon.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/dem_lisbon_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elevation in central Lisbon, Portugal — dem_lisbon_raster","text":"","code":"dem_lisbon_raster"},{"path":"https://docs.ropensci.org/slopes/reference/dem_lisbon_raster.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Elevation in central Lisbon, Portugal — dem_lisbon_raster","text":"raster dataset containing elevation sea level 1km bounding box Lisbon, Portugal.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/dem_lisbon_raster.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Elevation in central Lisbon, Portugal — dem_lisbon_raster","text":"https://github.com/rspatial/terra/issues/29","code":""},{"path":"https://docs.ropensci.org/slopes/reference/dem_lisbon_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Elevation in central Lisbon, Portugal — dem_lisbon_raster","text":"dataset acquired Instituto Superior Técnico (University Lisbon) 2012, covers Northern Metropolitan Area Lisbon, 10m cell resolution, projected official Portuguese EPSG: 3763 - TM06/ETRS89. dataset released open access dataset permission University Lisbon support project.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/dem_lisbon_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Elevation in central Lisbon, Portugal — dem_lisbon_raster","text":"","code":"library(sf) library(raster) #> Loading required package: sp dim(dem_lisbon_raster) #> [1] 133 200   1 res(dem_lisbon_raster) #> [1] 10 10 names(dem_lisbon_raster) #> [1] \"r1\" plot(dem_lisbon_raster) plot(lisbon_road_network[\"Avg_Slope\"], add = TRUE)"},{"path":"https://docs.ropensci.org/slopes/reference/elevation_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a linestring and add a third (z) dimension to its coordinates — elevation_add","title":"Take a linestring and add a third (z) dimension to its coordinates — elevation_add","text":"Take linestring add third (z) dimension coordinates","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a linestring and add a third (z) dimension to its coordinates — elevation_add","text":"","code":"elevation_add(   routes,   dem = NULL,   method = \"bilinear\",   terra = has_terra() && methods::is(dem, \"SpatRaster\") )"},{"path":"https://docs.ropensci.org/slopes/reference/elevation_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a linestring and add a third (z) dimension to its coordinates — elevation_add","text":"routes Routes, gradients calculated. object must class sf sfc LINESTRING geometries. dem Raster overlapping routes values representing elevations method method estimating elevation points, passed extract function extracting values raster datasets. Default: \"bilinear\". terra terra package used? TRUE default package installed dem class SpatRast","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a linestring and add a third (z) dimension to its coordinates — elevation_add","text":"sf object identical input routes, except coordinate values ouput third z dimension representing elevation vertex defines linear feature road.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_add.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take a linestring and add a third (z) dimension to its coordinates — elevation_add","text":"","code":"library(sf) routes = lisbon_road_network[204, ] dem = dem_lisbon_raster (r3d = elevation_add(routes, dem)) #> Simple feature collection with 1 feature and 7 fields #> Geometry type: LINESTRING #> Dimension:     XYZ #> Bounding box:  xmin: -87080.48 ymin: -105629.6 xmax: -87056.99 ymax: -105506.3 #> z_range:       zmin: 86.49414 zmax: 92.31126 #> Projected CRS: ETRS89 / Portugal TM06 #> # A tibble: 1 × 8 #>   OBJECTID Z_Min Z_Max Z_Mean Min_Slope Max_Slope Avg_Slope #> *    <int> <dbl> <dbl>  <dbl>     <dbl>     <dbl>     <dbl> #> 1     2997  86.5  92.3   89.9     0.334      32.0      7.49 #> # ℹ 1 more variable: geom <LINESTRING [m]> library(sf) st_z_range(routes) #> NULL st_z_range(r3d) #>     zmin     zmax  #> 86.49414 92.31126  plot(st_coordinates(r3d)[, 3])  plot_slope(r3d)  # \\donttest{ # Get elevation data (requires internet connection and API key): r3d_get = elevation_add(cyclestreets_route) #> Loading required namespace: ceramic #> Error in valid_numeric_matrix(x): !anyNA(x) is not TRUE plot_slope(r3d_get) #> Error in eval(expr, envir, enclos): object 'r3d_get' not found # }"},{"path":"https://docs.ropensci.org/slopes/reference/elevation_extract.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract elevations from coordinates — elevation_extract","title":"Extract elevations from coordinates — elevation_extract","text":"function takes series points located geographical space digital elevation model inputs returns vector elevation estimates associated point. function takes locations represented matrix XY (longitude latitude) coordinates digital elevation model (DEM) class raster terra. returns vector values representing estimates elevation associated points.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_extract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract elevations from coordinates — elevation_extract","text":"","code":"elevation_extract(   m,   dem,   method = \"bilinear\",   terra = has_terra() && methods::is(dem, \"SpatRaster\") )"},{"path":"https://docs.ropensci.org/slopes/reference/elevation_extract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract elevations from coordinates — elevation_extract","text":"m Matrix containing coordinates elevations sf object representing linear feature. dem Raster overlapping routes values representing elevations method method estimating elevation points, passed extract function extracting values raster datasets. Default: \"bilinear\". terra terra package used? TRUE default package installed dem class SpatRast","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_extract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract elevations from coordinates — elevation_extract","text":"vector elevation values.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_extract.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract elevations from coordinates — elevation_extract","text":"default, elevations estimated using bilinear interpolation (method = \"bilinear\") calculates point height based proximity centroids surrounding cells. value method argument passed method argument raster::extract() terra::extract() depending class input raster dataset. See Kidner et al. (1999) descriptions alternative elevation interpolation extrapolation algorithms.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_extract.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract elevations from coordinates — elevation_extract","text":"Kidner, David, Mark Dorey, Derek Smith. \"’s point? Interpolation extrapolation regular grid DEM.\" Fourth International Conference GeoComputation, Fredericksburg, VA, USA. 1999.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_extract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract elevations from coordinates — elevation_extract","text":"","code":"dem = dem_lisbon_raster elevation_extract(lisbon_road_network[1, ], dem) #>  [1] 3.267991 3.266818 3.265715 3.264418 3.263222 3.262339 3.261004 3.262972 #>  [9] 3.264940 3.266908 3.268876 3.308304 3.461349 3.467100 3.439341 3.421206 #> [17] 3.403916 3.387750 3.371584 3.356889 3.342193 3.327498 3.312644 3.297117 #> [25] 3.282411 3.267716 3.253020 3.218922 3.210919 3.202916 3.194914 3.176672 #> [33] 3.157027 3.191458 3.316882 3.410792 3.469193 3.487912 3.563260 3.640330 #> [41] 3.717938 m = sf::st_coordinates(lisbon_road_network[1, ]) elevation_extract(m, dem) #>  [1] 3.267991 3.266818 3.265715 3.264418 3.263222 3.262339 3.261004 3.262972 #>  [9] 3.264940 3.266908 3.268876 3.308304 3.461349 3.467100 3.439341 3.421206 #> [17] 3.403916 3.387750 3.371584 3.356889 3.342193 3.327498 3.312644 3.297117 #> [25] 3.282411 3.267716 3.253020 3.218922 3.210919 3.202916 3.194914 3.176672 #> [33] 3.157027 3.191458 3.316882 3.410792 3.469193 3.487912 3.563260 3.640330 #> [41] 3.717938 elevation_extract(m, dem, method = \"simple\") #>  [1] 3.370 3.370 3.382 3.394 3.406 3.419 3.104 3.116 3.128 3.140 3.152 3.233 #> [13] 3.507 3.400 3.389 3.374 3.363 3.352 3.341 3.341 3.330 3.319 3.308 3.296 #> [25] 3.285 3.274 3.263 3.252 3.252 3.241 3.230 3.219 3.208 3.315 3.451 3.451 #> [37] 3.560 3.560 3.543 3.652 3.762 # Test with terra (requires internet connection): # \\donttest{ if(slopes:::has_terra()) { et = terra::rast(dem_lisbon_raster) elevation_extract(m, et) } #>  [1] 3.267991 3.266818 3.265715 3.264418 3.263222 3.262339 3.261004 3.262972 #>  [9] 3.264940 3.266908 3.268876 3.308304 3.461349 3.467100 3.439341 3.421206 #> [17] 3.403916 3.387750 3.371584 3.356889 3.342193 3.327498 3.312644 3.297117 #> [25] 3.282411 3.267716 3.253020 3.218922 3.210919 3.202916 3.194914 3.176672 #> [33] 3.157027 3.191458 3.316882 3.410792 3.469193 3.487912 3.563260 3.640330 #> [41] 3.717938 # }"},{"path":"https://docs.ropensci.org/slopes/reference/elevation_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get elevation data from hosted maptile services — elevation_get","title":"Get elevation data from hosted maptile services — elevation_get","text":"elevation_get() uses cc_elevation() function ceramic package get DEM data raster format anywhere worldwide. requires API can added following guidance package's README slopes vignette.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get elevation data from hosted maptile services — elevation_get","text":"","code":"elevation_get(routes, ..., output_format = \"raster\")"},{"path":"https://docs.ropensci.org/slopes/reference/elevation_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get elevation data from hosted maptile services — elevation_get","text":"routes Routes, gradients calculated. object must class sf sfc LINESTRING geometries. ... Options passed cc_elevation() output_format format return data ? Accepts \"raster\" (default) \"terra\".","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get elevation data from hosted maptile services — elevation_get","text":"raster object cell values representing elevations bounding box input routes object.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get elevation data from hosted maptile services — elevation_get","text":"Note: use cc_elevation() function directly get DEM data, can cache data, described package's README.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/elevation_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get elevation data from hosted maptile services — elevation_get","text":"","code":"# Time-consuming examples that require an internet connection and API key: # \\donttest{ library(sf) library(raster) routes = cyclestreets_route e = elevation_get(routes) class(e) #> [1] \"RasterLayer\" #> attr(,\"package\") #> [1] \"raster\" crs(e) #> Coordinate Reference System: #> Deprecated Proj.4 representation: +proj=longlat +datum=WGS84 +no_defs  #> WKT2 2019 representation: #> GEOGCRS[\"unknown\", #>     DATUM[\"World Geodetic System 1984\", #>         ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>             LENGTHUNIT[\"metre\",1]], #>         ID[\"EPSG\",6326]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433], #>         ID[\"EPSG\",8901]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]  e #> class      : RasterLayer  #> dimensions : 345, 585, 201825  (nrow, ncol, ncell) #> resolution : 6.711421e-05, 6.711421e-05  (x, y) #> extent     : -1.55896, -1.519698, 53.79927, 53.82242  (xmin, xmax, ymin, ymax) #> crs        : +proj=longlat +datum=WGS84 +no_defs  #>  plot(e) #> Error in .plotraster2(x, col = col, maxpixels = maxpixels, add = add,     ext = ext, interpolate = interpolate, colNA = colNA, main = main,     addfun = addfun, facvar = facvar, alpha = alpha, npretty = npretty,     ...): no values associated with this RasterLayer plot(st_geometry(routes), add = TRUE) #> Error in plot.xy(xy.coords(x, y), type = type, ...): plot.new has not been called yet # }"},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Road segments in Lisbon — lisbon_road_network","title":"Road segments in Lisbon — lisbon_road_network","text":"dataset representing road segments Lisbon, X, Y Z (elevation) dimensions coordinate.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Road segments in Lisbon — lisbon_road_network","text":"","code":"lisbon_road_network"},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_network.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Road segments in Lisbon — lisbon_road_network","text":"object class sf, key variables include OBJECTID ID object Z_Min minimum elevation linear feature ArcMAP Z_Max max elevation linear feature ArcMAP Z_Mean mean elevation linear feature ArcMAP Slope_Min minimum slope linear feature ArcMAP Slope_Max max slope linear feature ArcMAP Slope_Mean mean slope linear feature ArcMAP geom geometry defining LINESTRING component segment","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_network.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Road segments in Lisbon — lisbon_road_network","text":"Produced ESRI's 3D Analyst extension","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_network.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Road segments in Lisbon — lisbon_road_network","text":"dataset covers 32 km roads central Lisbon, overlapping area covered dem_lisbon_raster dataset.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Road segments in Lisbon — lisbon_road_network","text":"","code":"library(sf) names(lisbon_road_network) #> [1] \"OBJECTID\"  \"Z_Min\"     \"Z_Max\"     \"Z_Mean\"    \"Min_Slope\" \"Max_Slope\" #> [7] \"Avg_Slope\" \"geom\"      sum(st_length(lisbon_road_network)) #> 32014.35 [m] plot(lisbon_road_network[\"Avg_Slope\"])"},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"A road segment in Lisbon, Portugal — lisbon_road_segment","title":"A road segment in Lisbon, Portugal — lisbon_road_segment","text":"single road segment 3d version. Different versions dataset provided.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A road segment in Lisbon, Portugal — lisbon_road_segment","text":"","code":"lisbon_road_segment"},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_segment.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A road segment in Lisbon, Portugal — lisbon_road_segment","text":"object class sf","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_segment.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A road segment in Lisbon, Portugal — lisbon_road_segment","text":"Produced ESRI's 3D Analyst extension","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_segment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A road segment in Lisbon, Portugal — lisbon_road_segment","text":"lisbon_road_segment 23 columns 1 row. lisbon_road_segment_xyz_mapbox created : lisbon_road_segment_xyz_mapbox = elevation_add(lisbon_road_segment).","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_road_segment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A road segment in Lisbon, Portugal — lisbon_road_segment","text":"","code":"lisbon_road_segment #> Simple feature collection with 1 feature and 7 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -87080.48 ymin: -105629.6 xmax: -87056.99 ymax: -105506.3 #> Projected CRS: ETRS89 / Portugal TM06 #> # A tibble: 1 × 8 #>   OBJECTID Z_Min Z_Max Z_Mean Min_Slope Max_Slope Avg_Slope #> *    <int> <dbl> <dbl>  <dbl>     <dbl>     <dbl>     <dbl> #> 1     2997  86.5  92.3   89.9     0.334      32.0      7.49 #> # ℹ 1 more variable: geom <LINESTRING [m]> lisbon_road_segment_3d #> Simple feature collection with 1 feature and 7 fields #> Geometry type: LINESTRING #> Dimension:     XYZ #> Bounding box:  xmin: -87080.48 ymin: -105629.6 xmax: -87056.99 ymax: -105506.3 #> z_range:       zmin: 86.49414 zmax: 92.31126 #> Projected CRS: ETRS89 / Portugal TM06 #> # A tibble: 1 × 8 #>   OBJECTID Z_Min Z_Max Z_Mean Min_Slope Max_Slope Avg_Slope #>      <int> <dbl> <dbl>  <dbl>     <dbl>     <dbl>     <dbl> #> 1     2997  86.5  92.3   89.9     0.334      32.0      7.49 #> # ℹ 1 more variable: geom <LINESTRING [m]> lisbon_road_segment_xyz_mapbox #> Simple feature collection with 1 feature and 7 fields #> Geometry type: LINESTRING #> Dimension:     XYZ #> Bounding box:  xmin: -87080.48 ymin: -105629.6 xmax: -87056.99 ymax: -105506.3 #> z_range:       zmin: 76.4 zmax: 88 #> Projected CRS: ETRS89 / Portugal TM06 #> # A tibble: 1 × 8 #>   OBJECTID Z_Min Z_Max Z_Mean Min_Slope Max_Slope Avg_Slope #>      <int> <dbl> <dbl>  <dbl>     <dbl>     <dbl>     <dbl> #> 1     2997  86.5  92.3   89.9     0.334      32.0      7.49 #> # ℹ 1 more variable: geom <LINESTRING [m]>"},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_route.html","id":null,"dir":"Reference","previous_headings":"","what":"A route composed of a single linestring in Lisbon, Portugal — lisbon_route","title":"A route composed of a single linestring in Lisbon, Portugal — lisbon_route","text":"route representing trip Santa Catarina area East central Lisbon map Castelo de São Jorge West central Lisbon.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_route.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A route composed of a single linestring in Lisbon, Portugal — lisbon_route","text":"","code":"lisbon_route"},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_route.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A route composed of a single linestring in Lisbon, Portugal — lisbon_route","text":"object class sf","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_route.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A route composed of a single linestring in Lisbon, Portugal — lisbon_route","text":"See lisbon_route.R script data-raw","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_route.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A route composed of a single linestring in Lisbon, Portugal — lisbon_route","text":"Different versions dataset provided. lisbon_route object 1 row 4 columns: geometry, ID, length whether path found. lisbon_route_xyz_mapbox created : lisbon_route_xyz_mapbox = elevation_add(lisbon_route).","code":""},{"path":"https://docs.ropensci.org/slopes/reference/lisbon_route.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A route composed of a single linestring in Lisbon, Portugal — lisbon_route","text":"","code":"lisbon_route #> Simple feature collection with 1 feature and 3 fields #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -88214.27 ymin: -106127.1 xmax: -86881.07 ymax: -105506.3 #> Projected CRS: ETRS89 / Portugal TM06 #> # A tibble: 1 × 4 #>                                              geometry    ID sum_length pathfound #>                                      <LINESTRING [m]> <dbl>      <dbl> <lgl>     #> 1 (-88202.31 -105757.6, -88201.67 -105762.3, -88200.…     1      2519. TRUE      lisbon_route_3d #> Simple feature collection with 1 feature and 3 fields #> Geometry type: LINESTRING #> Dimension:     XYZ #> Bounding box:  xmin: -88214.27 ymin: -106127.1 xmax: -86881.07 ymax: -105506.3 #> z_range:       zmin: 6.650858 zmax: 94.99939 #> Projected CRS: ETRS89 / Portugal TM06 #> # A tibble: 1 × 4 #>                                              geometry    ID sum_length pathfound #> *                                    <LINESTRING [m]> <dbl>      <dbl> <lgl>     #> 1 Z (-88202.31 -105757.6 55.91552, -88201.67 -105762…     1      2519. TRUE      lisbon_route_xyz_mapbox #> Simple feature collection with 1 feature and 3 fields #> Geometry type: LINESTRING #> Dimension:     XYZ #> Bounding box:  xmin: -88214.27 ymin: -106127.1 xmax: -86881.07 ymax: -105506.3 #> z_range:       zmin: 21.6 zmax: 95.46259 #> Projected CRS: ETRS89 / Portugal TM06 #> # A tibble: 1 × 4 #>                                              geometry    ID sum_length pathfound #> *                                    <LINESTRING [m]> <dbl>      <dbl> <lgl>     #> 1 Z (-88202.31 -105757.6 62.3, -88201.67 -105762.3 6…     1      2519. TRUE"},{"path":"https://docs.ropensci.org/slopes/reference/magnolia_xy.html","id":null,"dir":"Reference","previous_headings":"","what":"Road segments in Magnolia, Seattle — magnolia_xy","title":"Road segments in Magnolia, Seattle — magnolia_xy","text":"dataset representing road segments Magnolia area Seattle X, Y Z (elevation) dimensions coordinate.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/magnolia_xy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Road segments in Magnolia, Seattle — magnolia_xy","text":"","code":"magnolia_xy"},{"path":"https://docs.ropensci.org/slopes/reference/magnolia_xy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Road segments in Magnolia, Seattle — magnolia_xy","text":"object class sf","code":""},{"path":"https://docs.ropensci.org/slopes/reference/magnolia_xy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Road segments in Magnolia, Seattle — magnolia_xy","text":"Accessed early 2021 seattle-streets layer data-seattlecitygis website.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/magnolia_xy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Road segments in Magnolia, Seattle — magnolia_xy","text":"","code":"names(magnolia_xy) #> [1] \"BLOCKNBR\"   \"SPEEDLIMIT\" \"SLOPE_PCT\"  \"geometry\"   plot(magnolia_xy[\"SLOPE_PCT\"])"},{"path":"https://docs.ropensci.org/slopes/reference/plot_dz.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a digital elevation profile based on xyz data — plot_dz","title":"Plot a digital elevation profile based on xyz data — plot_dz","text":"Plot digital elevation profile based xyz data","code":""},{"path":"https://docs.ropensci.org/slopes/reference/plot_dz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a digital elevation profile based on xyz data — plot_dz","text":"","code":"plot_dz(   d,   z,   fill = TRUE,   horiz = FALSE,   pal = colorspace::diverging_hcl,   ...,   legend_position = \"top\",   col = \"black\",   cex = 0.9,   bg = grDevices::rgb(1, 1, 1, 0.8),   title = \"Slope colors (percentage gradient)\",   brks = NULL,   seq_brks = NULL,   ncol = 4 )"},{"path":"https://docs.ropensci.org/slopes/reference/plot_dz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a digital elevation profile based on xyz data — plot_dz","text":"d Cumulative distance z Elevations points across linestring fill profile filled? TRUE default horiz legend horizontal (FALSE default) pal Color palette use, colorspace::diverging_hcl default. ... Additional parameters pass legend legend_position legend position. One \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\", \"top\" (default), \"topright\", \"right\" \"center\". col Line colour, black default cex Legend size, 0.9 default bg Legend background colour, grDevices::rgb(1, 1, 1, 0.8) default. title Title legend, NULL default. brks Breaks colour palette show. c(1, 3, 6, 10, 20, 40, 100) default. seq_brks Sequence breaks show legend. Includes negative numbers omits zero default ncol Number columns legend, 4 default.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/plot_dz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a digital elevation profile based on xyz data — plot_dz","text":"plot showing elevation profile associated linestring.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/plot_dz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a digital elevation profile based on xyz data — plot_dz","text":"","code":"library(sf) route_xyz = lisbon_road_segment_3d m = st_coordinates(route_xyz) d = cumsum(sequential_dist(m, lonlat = FALSE)) d = c(0, d) z = m[, 3] slopes:::plot_dz(d, z, brks = c(3, 6, 10, 20, 40, 100))"},{"path":"https://docs.ropensci.org/slopes/reference/plot_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot slope data for a 3d linestring with base R graphics — plot_slope","title":"Plot slope data for a 3d linestring with base R graphics — plot_slope","text":"Plot slope data 3d linestring base R graphics","code":""},{"path":"https://docs.ropensci.org/slopes/reference/plot_slope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot slope data for a 3d linestring with base R graphics — plot_slope","text":"","code":"plot_slope(   route_xyz,   lonlat = sf::st_is_longlat(route_xyz),   fill = TRUE,   horiz = FALSE,   pal = colorspace::diverging_hcl,   legend_position = \"top\",   col = \"black\",   cex = 0.9,   bg = grDevices::rgb(1, 1, 1, 0.8),   title = \"Slope colors (percentage gradient)\",   brks = c(3, 6, 10, 20, 40, 100),   seq_brks = seq(from = 3, to = length(brks) * 2 - 2),   ncol = 4,   ... )"},{"path":"https://docs.ropensci.org/slopes/reference/plot_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot slope data for a 3d linestring with base R graphics — plot_slope","text":"route_xyz sf linestring x, y z coordinates, representing route linear object. lonlat routes provided longitude/latitude coordinates? default, value CRS routes (sf::st_is_longlat(routes)). fill profile filled? TRUE default horiz legend horizontal (FALSE default) pal Color palette use, colorspace::diverging_hcl default. legend_position legend position. One \"bottomright\", \"bottom\", \"bottomleft\", \"left\", \"topleft\", \"top\" (default), \"topright\", \"right\" \"center\". col Line colour, black default cex Legend size, 0.9 default bg Legend background colour, grDevices::rgb(1, 1, 1, 0.8) default. title Title legend, NULL default. brks Breaks colour palette show. c(1, 3, 6, 10, 20, 40, 100) default. seq_brks Sequence breaks show legend. Includes negative numbers omits zero default ncol Number columns legend, 4 default. ... Additional parameters pass legend","code":""},{"path":"https://docs.ropensci.org/slopes/reference/plot_slope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot slope data for a 3d linestring with base R graphics — plot_slope","text":"plot showing elevation profile associated linestring.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/plot_slope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot slope data for a 3d linestring with base R graphics — plot_slope","text":"","code":"plot_slope(lisbon_route_3d)  route_xyz = lisbon_road_segment_3d plot_slope(route_xyz)  plot_slope(route_xyz, brks = c(1, 2, 4, 8, 16, 30))  plot_slope(route_xyz, s = 5:8)"},{"path":"https://docs.ropensci.org/slopes/reference/sequential_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the sequential distances between sequential coordinate pairs — sequential_dist","title":"Calculate the sequential distances between sequential coordinate pairs — sequential_dist","text":"Set lonlat FALSE projected data, e.g. coordinates representing distance meters, degrees. Lonlat coodinates assumed (lonlat = TRUE default).","code":""},{"path":"https://docs.ropensci.org/slopes/reference/sequential_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the sequential distances between sequential coordinate pairs — sequential_dist","text":"","code":"sequential_dist(m, lonlat = TRUE)"},{"path":"https://docs.ropensci.org/slopes/reference/sequential_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the sequential distances between sequential coordinate pairs — sequential_dist","text":"m Matrix containing coordinates elevations. matrix three columns: x, y, z, order. Typically correspond location West-East, South-North, vertical elevation axes respectively. data geographic coordinates, Z values assumed metres. data projected coordinates, Z values assumed units X Y coordinates. lonlat coordinates lon/lat (geographic) coordinates? TRUE default.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/sequential_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the sequential distances between sequential coordinate pairs — sequential_dist","text":"vector distance values meters lonlat = TRUE map units input data lonlat = FALSE consecutive vertices.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/sequential_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the sequential distances between sequential coordinate pairs — sequential_dist","text":"","code":"x = c(0, 2, 3, 4, 5, 9) y = c(0, 0, 0, 0, 0, 1) m = cbind(x, y) d = sequential_dist(m, lonlat = FALSE) d #> [1] 2.000000 1.000000 1.000000 1.000000 4.123106 nrow(m) #> [1] 6 length(d) #> [1] 5"},{"path":"https://docs.ropensci.org/slopes/reference/slope_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","title":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","text":"Calculate gradient line segments 3D matrix coordinates","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","text":"","code":"slope_matrix(m, elevations = m[, 3], lonlat = TRUE)  slope_matrix_mean(m, elevations = m[, 3], lonlat = TRUE, directed = FALSE)  slope_matrix_weighted(m, elevations = m[, 3], lonlat = TRUE, directed = FALSE)"},{"path":"https://docs.ropensci.org/slopes/reference/slope_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","text":"m Matrix containing coordinates elevations. matrix three columns: x, y, z, order. Typically correspond location West-East, South-North, vertical elevation axes respectively. data geographic coordinates, Z values assumed metres. data projected coordinates, Z values assumed units X Y coordinates. elevations Elevations units x (assumed metres). Default value: m[, 3], meaning 'z' coordinate matrix coordinates. lonlat coordinates lon/lat (geographic) coordinates? TRUE default. directed value directed? FALSE default. TRUE result negative represents downslope (end point lower start point).","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","text":"vector slope gradients associated linear element (line consecutive vertices) associated linear features. Returned values slope_matrix_mean() slope_matrix_weighted() summary statistics linear elements linestring. output value proportion representing change elevation given change horizontal movement along linestring. 0.02, example, represents low gradient 2% 0.08 represents steep gradient 8%.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","text":"","code":"x = c(0, 2, 3, 4, 5, 9) y = c(0, 0, 0, 0, 0, 9) z = c(1, 2, 2, 4, 3, 0) / 10 m = cbind(x, y, z) slope_matrix_weighted(m, lonlat = FALSE) #> [1] 0.04714167 slope_matrix_weighted(m, lonlat = FALSE, directed = TRUE) #> [1] -0.04714167 # 0 value returned if no change in elevation: slope_matrix_weighted(m,lonlat = FALSE, directed = TRUE,   elevations = c(1, 2, 2, 4, 3, 1)) #> [1] 0 slope_matrix_mean(m, lonlat = FALSE) #> [1] 0.07609208 slope_matrix_mean(m, lonlat = FALSE, directed = TRUE) #> [1] -0.07609208 plot(x, z, ylim = c(-0.5, 0.5), type = \"l\") (gx = slope_vector(x, z)) #> [1]  0.050  0.000  0.200 -0.100 -0.075 (gxy = slope_matrix(m, lonlat = FALSE)) #> [1]  0.05000000  0.00000000  0.20000000 -0.10000000 -0.03046038 abline(h = 0, lty = 2) points(x[-length(x)], gx, col = \"red\") points(x[-length(x)], gxy, col = \"blue\") title(\"Distance (in x coordinates) elevation profile\",   sub = \"Points show calculated gradients of subsequent lines\")"},{"path":"https://docs.ropensci.org/slopes/reference/slope_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the gradient of line segments from a raster dataset — slope_raster","title":"Calculate the gradient of line segments from a raster dataset — slope_raster","text":"function takes sf representing routes geographical space raster dataset representing terrain inputs. returns average gradient route feature.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the gradient of line segments from a raster dataset — slope_raster","text":"","code":"slope_raster(   routes,   dem,   lonlat = sf::st_is_longlat(routes),   method = \"bilinear\",   fun = slope_matrix_weighted,   terra = has_terra() && methods::is(dem, \"SpatRaster\"),   directed = FALSE )"},{"path":"https://docs.ropensci.org/slopes/reference/slope_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the gradient of line segments from a raster dataset — slope_raster","text":"routes Routes, gradients calculated. object must class sf sfc LINESTRING geometries. dem Raster overlapping routes values representing elevations lonlat routes provided longitude/latitude coordinates? default, value CRS routes (sf::st_is_longlat(routes)). method method estimating elevation points, passed extract function extracting values raster datasets. Default: \"bilinear\". fun slope function calculate per route, slope_matrix_weighted default. terra terra package used? TRUE default package installed dem class SpatRast directed value directed? FALSE default. TRUE result negative represents downslope (end point lower start point).","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the gradient of line segments from a raster dataset — slope_raster","text":"vector slopes equal length number simple features (rows representing linestrings) input object.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_raster.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the gradient of line segments from a raster dataset — slope_raster","text":"calculating slopes associated OSM data, results may better network first split-, e.g. using function stplanr::rnet_breakup_vertices() stplanr package. Note: routes object must geometry type LINESTRING. sf::st_cast() function can convert MULTILINESTRING () geometries LINESTRINGs follows: r_linestring = sf::st_cast(routes, \"LINESTRING\").","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the gradient of line segments from a raster dataset — slope_raster","text":"","code":"library(sf) routes = lisbon_road_network[1:3, ] dem = dem_lisbon_raster (s = slope_raster(routes, dem)) #>           1           2           3  #> 0.003074005 0.010870459 0.004998315  cor(routes$Avg_Slope, s) #> [1] 0.9975107 slope_raster(routes, dem, directed = TRUE) #>            1            2            3  #>  0.003074005 -0.010870459  0.004998315  # Demonstrate that reverse routes have the opposite directed slope slope_raster(st_reverse(routes), dem, directed = TRUE) #>            1            2            3  #> -0.003074005  0.010870459 -0.004998315"},{"path":"https://docs.ropensci.org/slopes/reference/slope_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the gradient of line segments from distance and elevation vectors — slope_vector","title":"Calculate the gradient of line segments from distance and elevation vectors — slope_vector","text":"slope_vector() calculates slopes associated consecutive elements one dimensional distance associated elevations (see examples). slope_distance() calculates slopes associated consecutive distances elevations. slope_distance_mean() calculates mean average slopes associated consecutive distances elevations. slope_distance_weighted() calculates slopes associated consecutive distances elevations, mean value associated set distance/elevation vectors weighted proportion distance elevation measurement, longer sections proportionally influence resulting gradient estimate (see examples).","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the gradient of line segments from distance and elevation vectors — slope_vector","text":"","code":"slope_vector(x, elevations)  slope_distance(d, elevations)  slope_distance_mean(d, elevations, directed = FALSE)  slope_distance_weighted(d, elevations, directed = FALSE)"},{"path":"https://docs.ropensci.org/slopes/reference/slope_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the gradient of line segments from distance and elevation vectors — slope_vector","text":"x Vector locations elevations Elevations units x (assumed metres) d Vector distances points directed value directed? FALSE default. TRUE result negative represents downslope (end point lower start point).","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the gradient of line segments from distance and elevation vectors — slope_vector","text":"vector slope gradients associated linear element (line consecutive vertices) associated linear features. Returned values slope_distance_mean() slope_distance_mean_weighted() summary statistics linear elements linestring. output value proportion representing change elevation given change horizontal movement along linestring. 0.02, example, represents low gradient 2% 0.08 represents steep gradient 8%.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the gradient of line segments from distance and elevation vectors — slope_vector","text":"","code":"x = c(0, 2, 3, 4, 5, 9) elevations = c(1, 2, 2, 4, 3, 0) / 10 # downward slope overall slope_vector(x, elevations) #> [1]  0.050  0.000  0.200 -0.100 -0.075 library(sf) m = st_coordinates(lisbon_road_segment) d = sequential_dist(m, lonlat = FALSE) elevations = elevation_extract(m, dem_lisbon_raster) slope_distance(d, elevations) #>  [1] -0.047226259 -0.040883072 -0.025032918 -0.061124557 -0.017447060 #>  [6] -0.062426272 -0.123580541  0.033705378  0.004292243 -0.040360003 #> [11] -0.151671893 -0.182367906  0.409246854 -0.034463974 -0.098406640 #> [16] -0.161798173  0.076261379  0.100654228 slope_distance_mean(d, elevations) #> [1] 0.09283052 slope_distance_mean(d, elevations, directed = TRUE) #> [1] -0.09283052 slope_distance_mean(rev(d), rev(elevations), directed = TRUE) #> [1] 0.09283052 slope_distance_weighted(d, elevations) #> [1] 0.09501323 slope_distance_weighted(d, elevations, directed = TRUE) #> [1] -0.09501323"},{"path":"https://docs.ropensci.org/slopes/reference/slope_xyz.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract slopes from xyz data frame or sf objects — slope_xyz","title":"Extract slopes from xyz data frame or sf objects — slope_xyz","text":"function takes sf object 'XYZ' coordinates returns vector numeric values representing average slope linestring sf data frame input.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_xyz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract slopes from xyz data frame or sf objects — slope_xyz","text":"","code":"slope_xyz(   route_xyz,   fun = slope_matrix_weighted,   lonlat = TRUE,   directed = FALSE )"},{"path":"https://docs.ropensci.org/slopes/reference/slope_xyz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract slopes from xyz data frame or sf objects — slope_xyz","text":"route_xyz sf sfc object XYZ coordinate dimensions fun slope function calculate per route, slope_matrix_weighted default. lonlat coordinates lon/lat order? TRUE default directed value directed? FALSE default. TRUE result negative represents downslope (end point lower start point).","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_xyz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract slopes from xyz data frame or sf objects — slope_xyz","text":"vector slopes equal length number simple features (rows representing linestrings) input object.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_xyz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract slopes from xyz data frame or sf objects — slope_xyz","text":"default function calculate mean slope slope_matrix_weighted(). can also use slope_matrix_mean() package function takes inputs functions package.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/slope_xyz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract slopes from xyz data frame or sf objects — slope_xyz","text":"","code":"route_xyz = lisbon_road_segment_3d slope_xyz(route_xyz, lonlat = FALSE) #>          1  #> 0.09501323  slope_xyz(route_xyz$geom, lonlat = FALSE) #>          1  #> 0.09501323  slope_xyz(route_xyz, lonlat = FALSE, directed = TRUE) #>           1  #> -0.09501323  slope_xyz(route_xyz, lonlat = FALSE, fun = slope_matrix_mean) #>          1  #> 0.09283052"},{"path":"https://docs.ropensci.org/slopes/reference/slopes-package.html","id":null,"dir":"Reference","previous_headings":"","what":"slopes: Calculate Slopes of Roads, Rivers and Trajectories — slopes-package","title":"slopes: Calculate Slopes of Roads, Rivers and Trajectories — slopes-package","text":"Calculate slope (also known steepness gradient) linear features roads, rivers ski routes. Created Robin Lovelace Rosa Félix, developed package support research active travel, prioritisation investment cycling, activity sensitive slopes, particular. See github.com/ITSLeeds/slopes source code ropensci.github.io/slopes website. package functions can found Reference page package website.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/slopes/reference/slopes-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"slopes: Calculate Slopes of Roads, Rivers and Trajectories — slopes-package","text":"Maintainer: Robin Lovelace rob00x@gmail.com (ORCID) Authors: Rosa Félix rosamfelix@tecnico.ulisboa.pt (ORCID) Joey Talbot j.d.talbot@leeds.ac.uk (ORCID) contributors: Dan Olner (Dan reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/420#issuecomment-857662657 ) [reviewer] Andy Teucher (Andy reviewed package rOpenSci, see https://github.com/ropensci/software-review/issues/420#issuecomment-858231647 ) [reviewer]","code":""},{"path":"https://docs.ropensci.org/slopes/reference/z_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate summary values for 'Z' elevation attributes — z_value","title":"Calculate summary values for 'Z' elevation attributes — z_value","text":"slope_z*() functions calculate summary values Z axis sfc objects XYZ geometries.","code":""},{"path":"https://docs.ropensci.org/slopes/reference/z_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate summary values for 'Z' elevation attributes — z_value","text":"","code":"z_value(x)  z_start(x)  z_end(x)  z_mean(x)  z_max(x)  z_min(x)  z_elevation_change_start_end(x)  z_direction(x)  z_cumulative_difference(x)"},{"path":"https://docs.ropensci.org/slopes/reference/z_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate summary values for 'Z' elevation attributes — z_value","text":"x sfc object 'XYZ' coordinates","code":""},{"path":"https://docs.ropensci.org/slopes/reference/z_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate summary values for 'Z' elevation attributes — z_value","text":"vector values representing elevations associated simple feature geometries elevations (XYZ coordinates).","code":""},{"path":"https://docs.ropensci.org/slopes/reference/z_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate summary values for 'Z' elevation attributes — z_value","text":"","code":"x = slopes::lisbon_route_3d x #> Simple feature collection with 1 feature and 3 fields #> Geometry type: LINESTRING #> Dimension:     XYZ #> Bounding box:  xmin: -88214.27 ymin: -106127.1 xmax: -86881.07 ymax: -105506.3 #> z_range:       zmin: 6.650858 zmax: 94.99939 #> Projected CRS: ETRS89 / Portugal TM06 #> # A tibble: 1 × 4 #>                                              geometry    ID sum_length pathfound #> *                                    <LINESTRING [m]> <dbl>      <dbl> <lgl>     #> 1 Z (-88202.31 -105757.6 55.91552, -88201.67 -105762…     1      2519. TRUE      z_value(x)[1:5] #> [1] 55.91552 55.52176 54.62495 50.82914 50.76749 xy = slopes::lisbon_route try(z_value(xy)) # error message #> Error in z_value(xy) :  #>   Requires object that have XYZ geometries, see ?slope_raster. z_start(x) #> [1] 55.91552 z_end(x) #> [1] 94.28048 z_direction(x) #> [1] 1 z_elevation_change_start_end(x) #> [1] 38.36497 z_direction(x) #> [1] 1 z_cumulative_difference(x) #> [1] 196.9088"},{"path":"https://docs.ropensci.org/slopes/news/index.html","id":"slopes-101","dir":"Changelog","previous_headings":"","what":"slopes 1.0.1","title":"slopes 1.0.1","text":"Package source code now hosted https://github.com/ropensci/slopes New documentation section showing directed routes work: https://docs.ropensci.org/slopes/articles/slopes.html#splitting--network","code":""},{"path":"https://docs.ropensci.org/slopes/news/index.html","id":"slopes-100","dir":"Changelog","previous_headings":"","what":"slopes 1.0.0","title":"slopes 1.0.0","text":"submitted responded comments rOpenSci review. Many changes, including breaking changes function names. Added NEWS.md file track changes package.","code":""},{"path":"https://docs.ropensci.org/slopes/news/index.html","id":"slopes-001","dir":"Changelog","previous_headings":"","what":"slopes 0.0.1","title":"slopes 0.0.1","text":"Initial version package GitHub.","code":""}]
